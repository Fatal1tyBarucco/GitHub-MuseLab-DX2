name: Docker

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  schedule:
    - cron: '30 0 * * *'
  push:
    branches: [ "main" ]
    paths-ignore:
      - 'CHANGELOG.md'
      - 'README.md'
    # Publish semver tags as releases.
    tags: [ '*.*.*' ]
  pull_request:
    branches: [ "main" ]
    paths-ignore:
      - 'CHANGELOG.md'
      - 'README.md'

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: docker.io # ghcr.io
  # github.repository as <account>/<repo>
  # IMAGE_NAME: ${{ github.repository }}
  IMAGE_NAME: rbarucco/github-muselab-dx2

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: Install Cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@v3.9.2
        with:
          cosign-release: 'v2.1.1'
      - name: Check install!
        run: cosign version

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3 # v3.3.0
        with:
          registry: ${{ env.REGISTRY }}
          username: rbarucco # ${{ github.actor }}
          password: ${{ secrets.DOCKER }}

      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5 # v5.7.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v6 # v6.15.0
        with:
          context: .
          sbom: ${{ github.event_name != 'pull_request' }}
          provenance: ${{ github.event_name != 'pull_request' }}
          push: ${{ github.event_name != 'pull_request' }}
          load: ${{ github.event_name == 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # cache-from: type=registry,ref=${{ env.IMAGE_NAME }}:buildcache
          # cache-to: type=registry,ref=${{ env.IMAGE_NAME }}:buildcache,mode=max
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Compare the image built in the pull request with the one in production
      - name: Docker Scout
        id: docker-scout
        if: ${{ github.event_name == 'pull_request' }}
        uses: docker/scout-action@v1
        with:
          command: compare
          image: ${{ steps.meta.outputs.tags }}
          to-env: production
          ignore-unchanged: true
          only-severities: critical,high
          github-token: ${{ secrets.GITHUB_TOKEN }}

      # Upload code coverage to Codecov.io
      - name: Upload code coverage for Apex to Codecov.io
        uses: codecov/codecov-action@v5
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          flags: Apex
